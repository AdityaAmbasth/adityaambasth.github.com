<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
    <title type="text" xml:lang="en">Chris Turner</title>
    <link type="application/atom+xml" rel="self" href="http://username.github.io//atom.xml"/>
  
  <link href="http://username.github.io//"/>
  <id>http://username.github.io//</id>
  <updated>2016-08-27T14:57:48Z</updated>
  <author>
    <name>Chris Turner</name>
    <email>yourname@email.com</email>
  </author>
  <rights type="text">Copyright © 2016 Chris Turner. All rights reserved.</rights>
  
  <entry>
  <title type="text">A Full and Comprehensive Style Test (HTML)</title>
  <link rel="alternate" type="text/html" href="http://username.github.io//post1.html" />
  <id>http://username.github.io//post1</id>
  <published>2013-06-05T00:00:00Z</published>
  <updated>2013-06-05T00:00:00Z</updated>
  <content type="html"><![CDATA[ <blockquote><p>This is Markdown Cheatsheet Demo for <strong>Sustain</strong>, this Jekyll theme. Please check the raw content of this file for the markdown usage.</p></blockquote>

<p>This is just an <em>ipsis verbis</em> copy of the first example running on the <a href="http://demo.ghost.io">Ghost Demo</a>. This shows how you can use html styling to achieve your hopes.</p>




<p>Below is just about everything you’ll need to style in the theme. Check the source code to see the many embedded elements within paragraphs.</p>




<hr />




<h1 id="heading1">Heading 1</h1>




<h2 id="heading2">Heading 2</h2>




<h3 id="heading3">Heading 3</h3>




<h4 id="heading4">Heading 4</h4>




<h5 id="heading5">Heading 5</h5>




<h6 id="heading6">Heading 6</h6>




<hr />




<p>Lorem ipsum dolor sit amet, <a title="test link" href="#">test link</a> adipiscing elit. <strong>This is strong.</strong> Nullam dignissim convallis est. Quisque aliquam. <em>This is emphasized.</em> Donec faucibus. Nunc iaculis suscipit dui. 5<sup>3</sup> = 125. Water is H<sub>2</sub>O. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. <cite>The New York Times</cite> (That’s a citation). <span style="text-decoration:underline;">Underline.</span> Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.</p>




<p><abbr title="Hyper Text Markup Language">HTML</abbr> and <abbr title="Cascading Style Sheets">CSS</abbr> are our tools. Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.  Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. To copy a file type <code>COPY <var>filename</var></code>. <del>Dinner’s at 5:00.</del> <ins>Let’s make that 7.</ins> This <span style="text-decoration:line-through;">text</span> has been struck.</p>




<hr />




<h2 id="media">Media</h2>




<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore.</p>




<h3 id="bigimage">Big Image</h3>




<p><img src="http://demo.ghost.io/content/images/2014/09/testimg1.jpeg" alt="Test Image" /></p>




<p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</p>




<h3 id="smallimage">Small Image</h3>




<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore.</p>




<p><img src="http://demo.ghost.io/content/images/2014/09/testimg2.jpg" alt="Small Test Image" /></p>




<p>Labore et dolore.</p>




<hr />




<h2 id="listtypes">List Types</h2>




<h3 id="definitionlist">Definition List</h3>




<dl>  
<dt>Definition List Title</dt>  
<dd>This is a definition list division.</dd>  
<dt>Definition</dt>  
<dd>An exact statement or description of the nature, scope, or meaning of something: <em>our definition of what constitutes poetry.</em></dd>  
</dl>




<h3 id="orderedlist">Ordered List</h3>




<ol>
<li>List Item 1  </li>
<li>List Item 2 <br />
<ol><li>Nested list item A</li>
<li>Nested list item B</li></ol></li>
<li>List Item 3</li>
</ol>




<h3 id="unorderedlist">Unordered List</h3>




<ul>
<li>List Item 1</li>
<li>List Item 2
<ul><li>Nested list item A</li>
<li>Nested list item B</li></ul></li>
<li>List Item 3</li>
</ul>




<hr />




<h2 id="table">Table</h2>




<table>  
<tbody>  
<tr>  
<th>Table Header 1</th>  
<th>Table Header 2</th>  
<th>Table Header 3</th>  
</tr>  
<tr>  
<td>Division 1</td>  
<td>Division 2</td>  
<td>Division 3</td>  
</tr>  
<tr class="even">  
<td>Division 1</td>  
<td>Division 2</td>  
<td>Division 3</td>  
</tr>  
<tr>  
<td>Division 1</td>  
<td>Division 2</td>  
<td>Division 3</td>  
</tr>  
</tbody>  
</table>




<hr />




<h2 id="preformattedtext">Preformatted Text</h2>




<p>Typographically, preformatted text is not the same thing as code. Sometimes, a faithful execution of the text requires preformatted text that may not have anything to do with code. Most browsers use Courier and that’s a good default — with one slight adjustment, Courier 10 Pitch over regular Courier for Linux users.</p>




<h3 id="code">Code</h3>




<p>Code can be presented inline, like <code>&lt;?php bloginfo('stylesheet_url'); ?&gt;</code>, or within a <code>&lt;pre&gt;</code> block. Because we have more specific typographic needs for code, we’ll specify Consolas and Monaco ahead of the browser-defined monospace font.</p>


<p><figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nf">#container</span> <span class="p">{</span>
    <span class="k">float</span><span class="o">:</span> <span class="k">left</span><span class="p">;</span>
    <span class="k">margin</span><span class="o">:</span> <span class="m">0</span> <span class="m">-240px</span> <span class="m">0</span> <span class="m">0</span><span class="p">;</span>
    <span class="k">width</span><span class="o">:</span> <span class="m">100%</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure></p>

<hr />




<h2 id="blockquotes">Blockquotes</h2>




<p>Let’s keep it simple. Italics are good to help set it off from the body text. Be sure to style the citation.</p>




<blockquote>
  <p>Good afternoon, gentlemen. I am a HAL 9000 computer. I became operational at the H.A.L. plant in Urbana, Illinois on the 12th of January 1992. My instructor was Mr. Langley, and he taught me to sing a song. If you’d like to hear it I can sing it for you. <cite>— <a href="http://en.wikipedia.org/wiki/HAL_9000">HAL 9000</a></cite></p>
</blockquote>




<p>And here’s a bit of trailing text.</p>




<hr />




<h2 id="textlevelsemantics">Text-level semantics</h2>




<p>The <a href="#">a element</a> example <br />
The <abbr>abbr element</abbr> and <abbr title="Title text">abbr element with title</abbr> examples <br />
The <b>b element</b> example <br />
The <cite>cite element</cite> example <br />
The <code>code element</code> example <br />
The <del>del element</del> example <br />
The <dfn>dfn element</dfn> and <dfn title="Title text">dfn element with title</dfn> examples <br />
The <em>em element</em> example <br />
The <i>i element</i> example <br />
The <ins>ins element</ins> example <br />
The <kbd>kbd element</kbd> example <br />
The <mark>mark element</mark> example <br />
The <q>q element <q>inside</q> a q element</q> example <br />
The <s>s element</s> example <br />
The <samp>samp element</samp> example <br />
The <small>small element</small> example <br />
The <span>span element</span> example <br />
The <strong>strong element</strong> example <br />
The <sub>sub element</sub> example <br />
The <sup>sup element</sup> example <br />
The <var>var element</var> example <br />
The <u>u element</u> example</p>




<hr />




<h2 id="forms">Forms</h2>


<p><form><br/>
<fieldset><br/>
<legend>Inputs as descendents of labels (form legend)</legend><br/>
<label><br/>
<b>Text input</b><br/>
<input type="text" value="default value"><br/>
</label><br/>
<label><br/>
<b>Email input</b><br/>
<input type="email"><br/>
</label><br/>
<label><br/>
<b>Search input</b><br/>
<input type="search"><br/>
</label><br/>
<label><br/>
<b>Tel input</b><br/>
<input type="tel"><br/>
</label><br/>
<label><br/>
<b>URL input</b><br/>
<input type="url" placeholder="http://"><br/>
</label><br/>
<label><br/>
<b>Password input</b><br/>
<input type="password" value="password"><br/>
</label><br/>
<label><br/>
<b>File input</b><br/>
<input type="file"><br/>
</label><br/>
<label><br/>
<b>Radio input</b><br/>
<input type="radio" name="rad"><br/>
</label><br/>
<label><br/>
<b>Checkbox input</b><br/>
<input type="checkbox"><br/>
</label><br/>
<label><br/>
<input type="radio" name="rad"> Radio input<br/>
</label><br/>
<label><br/>
<input type="checkbox"> Checkbox input<br/>
</label><br/>
<label><br/>
<b>Select field</b><br/>
<select><br/>
<option>Option 01</option><br/>
<option>Option 02</option><br/>
</select><br/>
</label><br/>
<label><br/>
<b>Textarea</b><br/>
<textarea cols="30" rows="5" >Textarea text</textarea><br/>
</label><br/>
</fieldset></p>

<p><fieldset><br/>
<legend>Clickable inputs and buttons</legend><br/>
<input type="image" src="http://placekitten.com/90/24" alt="Image (input)"><br/>
<input type="reset" value="Reset (input)"><br/>
<input type="button" value="Button (input)"><br/>
<input type="submit" value="Submit (input)"><br/>
<button type="reset">Reset (button)</button><br/>
<button type="button">Button (button)</button><br/>
<button type="submit">Submit (button)</button><br/>
</fieldset></p>

<p><fieldset id="boxsize"><br/>
<legend>box-sizing tests</legend></p>

<div><input type="text" value="text"></div>


<p></p>

<div><input type="email" value="email"></div>


<p></p>

<div><input type="search" value="search"></div>


<p></p>

<div><input type="url" value="http://example.com"></div>


<p></p>

<div><input type="password" value="password"></div>


<p></p>

<div><input type="color" value="#000000"></div>


<p></p>

<div><input type="number" value="5"></div>


<p></p>

<div><input type="range" value="10"></div>


<p></p>

<div><input type="date" value="1970-01-01"></div>


<p></p>

<div><input type="month" value="1970-01"></div>


<p></p>

<div><input type="week" value="1970-W01"></div>


<p></p>

<div><input type="time" value="18:23"></div>


<p></p>

<div><input type="datetime" value="1970-01-01T00:00:00Z"></div>


<p></p>

<div><input type="datetime-local" value="1970-01-01T00:00"></div>


<p></p>

<div><input type="radio"></div>


<p></p>

<div><input type="checkbox"></div>


<p></p>

<div><select><option>Option 01</option><option>Option 02</option></select></div>


<p></p>

<div><textarea cols="30" rows="5" >Textarea text</textarea></div>


<p></p>

<div><input type="image" src="http://placekitten.com/90/24" alt="Image (input)"></div>


<p></p>

<div><input type="reset" value="Reset (input)"></div>


<p></p>

<div><input type="button" value="Button (input)"></div>


<p></p>

<div><input type="submit" value="Submit (input)"></div>


<p></p>

<div><button type="reset">Reset (button)</button></div>


<p></p>

<div><button type="button">Button (button)</button></div>


<p></p>

<div><button type="submit">Submit (button)</button></div>


<p>
</fieldset><br/>
</form></p>

<hr />




<h2 id="embeds">Embeds</h2>




<p>Sometimes all you want to do is embed a little love from another location and set your post alive.</p>




<h3 id="video">Video</h3>




<p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>




<iframe src="//player.vimeo.com/video/103224792?title=0&amp;byline=0&amp;portrait=0" width="600" height="338" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>




<p>Culpa qui officia deserunt mollit anim id est laborum.</p>




<h3 id="slides">Slides</h3>




<p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>




<script async class="speakerdeck-embed" data-id="34d2856027ce01316b5d621ab8e7d421" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js"></script>




<p>Culpa qui officia deserunt mollit anim id est laborum.</p>




<h3 id="audio">Audio</h3>




<p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>




<iframe width="100%" height="450" scrolling="no" frameborder="no" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/169381837&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;visual=true"></iframe>




<p>Culpa qui officia deserunt mollit anim id est laborum.</p>




<h3 id="code">Code</h3>




<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt.</p>




<p><div data-height="268" data-theme-id="0" data-slug-hash="bcqhe" data-default-tab="js" data-user="rglazebrook" class='codepen'></p>




<pre><code>var c = new Sketch.create({autoclear: false}),
    bigCircle = 50,
    littleCircle = 5,
    // The velocity value determines how much to move the spinner head (in radians).
    velocity = 0.105,
    hue = 0,
    // The alpha value below determines the length of the spinner&#39;s tail.
    bg = &#39;rgba(40,40,40,.075)&#39;;
    Spinner = function() {};

Spinner.prototype.setup = function() {
  this.x = c.width / 2;
  this.y = c.height / 2 - bigCircle;
  this.rotation = 0;
}
Spinner.prototype.update = function() {
  this.rotation += velocity;
  this.rotation = this.rotation % TWO_PI;
  this.x = c.width /2 + cos(this.rotation) * bigCircle;
  this.y = c.height / 2 + sin(this.rotation) * bigCircle;
}
Spinner.prototype.draw = function() {
  c.fillStyle = &#39;hsl(&#39;+hue+&#39;,50%,50%)&#39;;
  c.beginPath();
  c.arc(this.x, this.y, littleCircle, 0, TWO_PI);
  c.fill();
  c.closePath(); 
}
c.setup = function() {
  spinner = new Spinner();
  spinner.setup();
} 
c.update = function() {
  spinner.update();
  hue = ++hue % 360;
}
c.draw = function() {
  spinner.draw();
  c.fillStyle = bg;
  c.fillRect(0,0,c.width,c.height);
}
</code></pre>


<p></p>

<p>See the Pen <a href='http://codepen.io/rglazebrook/pen/bcqhe/'>Simple Rotating Spinner</a> by Rob Glazebrook (<a href='http://codepen.io/rglazebrook'>@rglazebrook</a>) on <a href='http://codepen.io'>CodePen</a>.</p>


<p></p>

<p></div><script async src="//codepen.io/assets/embed/ei.js"></script></p>




<p>Isn't it beautiful.</p>

 ]]></content>
</entry>


  <entry>
  <title type="text">Another markdown full cheatsheet demo (Markdown)</title>
  <link rel="alternate" type="text/html" href="http://username.github.io//post2.html" />
  <id>http://username.github.io//post2</id>
  <published>2013-05-27T00:00:00Z</published>
  <updated>2013-05-27T00:00:00Z</updated>
  <content type="html"><![CDATA[ <blockquote><p>This is Markdown Cheatsheet Demo for <strong>Sustain</strong>, this Jekyll theme. Please check the raw content of this file for the markdown usage.</p></blockquote>

<h2>Typography Elements in One</h2>

<p>Let&rsquo;s start with a informative paragraph. <strong>This text is bolded.</strong> But not this one! <em>How about italic text?</em> Cool right? Ok, let&rsquo;s <strong><em>combine</em></strong> them together. Yeah, that&rsquo;s right! I have code to highlight, so <code>ThisIsMyCode()</code>. What a nice! Good people will hyperlink away, so <a href="#">here we go</a> or <a href="http://www.example.com">http://www.example.com</a>.</p>

<div class="divider"></div>


<h2>Headings H1 to H6</h2>

<h1>H1 Heading</h1>

<h2>H2 Heading</h2>

<h3>H3 Heading</h3>

<h4>H4 Heading</h4>

<h5>H5 Heading</h5>

<h6>H6 Heading</h6>

<div class="divider"></div>


<h2>Footnote</h2>

<p>Let&rsquo;s say you have text that you want to refer with a footnote, you can do that too! This is an example for the footnote number one <a href="Footnote">^1</a>. You can even add more footnotes, with link! <a href="A">^2</a></p>

<div class="divider"></div>


<h2>Blockquote</h2>

<blockquote><p>Start by doing what&rsquo;s necessary; then do what&rsquo;s possible; and suddenly you are doing the impossible. &ndash;Francis of Assisi</p></blockquote>

<p><strong>NOTE:</strong> This theme does NOT support nested blockquotes.</p>

<div class="divider"></div>


<h2>List Items</h2>

<ol>
<li>First order list item</li>
<li><p>Second item</p></li>
<li><p>Unordered list can use asterisks</p></li>
<li>Or minuses</li>
<li>Or pluses</li>
</ol>


<div class="divider"></div>


<h2>Code Blocks</h2>

<p><figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">s</span> <span class="o">=</span> <span class="s2">&quot;JavaScript syntax highlighting&quot;</span><span class="p">;</span>
<span class="nx">alert</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span></code></pre></figure></p>

<p><figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">sys</span><br/>
<span class="n">s</span> <span class="o">=</span> <span class="s">&quot;Python syntax highlighting&quot;</span>
<span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">)</span><br/>
<span class="k">def</span> <span class="nf">run_some_function</span><span class="p">():</span>
    <span class="s">&quot;Docs&hellip;&quot;</span>
    <span class="k">return</span></code></pre></figure></p>

<p><figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="c">/<em> css synthax highlighting </em>/</span>
<span class="nf">#container</span> <span class="p">{</span>
    <span class="k">float</span><span class="o">:</span> <span class="k">left</span><span class="p">;</span>
    <span class="k">margin</span><span class="o">:</span> <span class="m">0</span> <span class="m">-240px</span> <span class="m">0</span> <span class="m">0</span><span class="p">;</span>
    <span class="k">width</span><span class="o">:</span> <span class="m">100%</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure></p>

<pre><code>No language indicated, so no syntax highlighting.
But let's throw in a &lt;b&gt;tag&lt;/b&gt;.
</code></pre>

<div class="divider"></div>


<h2>Table</h2>

<h3>Table 1: With Alignment</h3>

<table>
<thead>
<tr>
<th> Tables        </th>
<th style="text-align:center;"> Are           </th>
<th style="text-align:right;"> Cool  </th>
</tr>
</thead>
<tbody>
<tr>
<td> col 3 is      </td>
<td style="text-align:center;"> right-aligned </td>
<td style="text-align:right;"> $1600 </td>
</tr>
<tr>
<td> col 2 is      </td>
<td style="text-align:center;"> centered      </td>
<td style="text-align:right;">   $12 </td>
</tr>
<tr>
<td> zebra stripes </td>
<td style="text-align:center;"> are neat      </td>
<td style="text-align:right;">    $1 </td>
</tr>
</tbody>
</table>


<h3>Table 2: With Typography Elements</h3>

<table>
<thead>
<tr>
<th>Markdown </th>
<th> Less </th>
<th> Pretty</th>
</tr>
</thead>
<tbody>
<tr>
<td><em>Still</em> </td>
<td> <code>renders</code> </td>
<td> <strong>nicely</strong></td>
</tr>
<tr>
<td>1 </td>
<td> 2 </td>
<td> 3</td>
</tr>
</tbody>
</table>


<div class="divider"></div>


<h2>Horizontal Line</h2>

<p>The HTML <code>&lt;hr&gt;</code> element is for creating a &ldquo;thematic break&rdquo; between paragraph-level elements. In markdown, you can create a <code>&lt;hr&gt;</code> with any of the following:</p>

<ul>
<li><code>___</code>: three consecutive underscores</li>
<li><code>---</code>: three consecutive dashes</li>
<li><code>***</code>: three consecutive asterisks</li>
</ul>


<p>renders to:</p>

<hr />

<hr />

<hr />

<div class="divider"></div>


<h2>Media</h2>

<h3>YouTube Embedded Iframe</h3>

<iframe width="420" height="315" src="https://www.youtube.com/embed/nN6QuNqmAwk" frameborder="0" allowfullscreen></iframe>


<h3>Image</h3>

<p><img src="https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcSn8cwf82ee9tfml4Wx-tsM5AUavJ_DRHIiXXE4RejRp0RF2L7f6g" alt="Nature" /></p>
 ]]></content>
</entry>


  <entry>
  <title type="text">Now some lorem ipsum</title>
  <link rel="alternate" type="text/html" href="http://username.github.io//post3.html" />
  <id>http://username.github.io//post3</id>
  <published>2013-04-02T00:00:00Z</published>
  <updated>2013-04-02T00:00:00Z</updated>
  <content type="html"><![CDATA[ <p>Expetenda deseruisse eam no, purto adhuc ut pri, ex vocent iracundia theophrastus usu. Dicta causae meliore ex vel, in vix erant integre petentium. Vix ei nisl scripta recusabo, eam doming blandit facilisis ex. No odio persequeris usu, in sea euismod explicari referrentur. Dicit libris iuvaret vim at. Eu noster luptatum pri, magna soleat graeco eu pro.</p>

<p>Vix id vivendum conceptam, et movet commodo indoctum vel. An mea nisl impedit principes. Qui at quod munere dissentiet, vix at modus oporteat consequuntur. Ius saepe fastidii ea, mei ne falli dicunt aeterno. Euismod consetetur ea sed.</p>

<p>Nostrum vivendum conceptam ea sed, te nam meliore vivendo. At usu aliquip prompta, et eos dico alterum neglegentur, lucilius lobortis in vis. Vulputate cotidieque ut nec, quem persius sea ex, an mea luptatum oporteat. Dolor scribentur te sit, cum facilisi forensibus id, duo virtute forensibus voluptatum ad.</p>

<p>Inermis recusabo elaboraret mea et, dicat neglegentur vim te. Nec et sanctus scriptorem, usu ex sapientem gubergren. Tamquam admodum ei usu. Sea at tota soleat tibique, per an fugit accumsan disputando, no justo augue civibus nam.</p>

<p>Mei ei quando convenire, nec ea wisi utroque intellegebat. Essent putant indoctum sed in, reprimique persequeris neglegentur te quo. Nam rebum tractatos partiendo at, debet ubique oporteat ut his, ullum consul audire an est. Id legere saperet gloriatur nam, cum molestie percipit ex.</p>

<p>Eam ut indoctum honestatis reprehendunt, at nam quot nullam fabulas. Graeci vivendo liberavisse his ex, wisi mandamus eu cum, ei sed exerci definitiones. Diam prompta pro ad, dolor corpora ei mea. Ex tantas eleifend duo.</p>
 ]]></content>
</entry>


  <entry>
  <title type="text">Continued...</title>
  <link rel="alternate" type="text/html" href="http://username.github.io//post4.html" />
  <id>http://username.github.io//post4</id>
  <published>2013-03-15T00:00:00Z</published>
  <updated>2013-03-15T00:00:00Z</updated>
  <content type="html"><![CDATA[ <p>Errem feugait inimicus ad usu, sit porro verterem ut, ne duo primis eloquentiam ullamcorper. Omnes discere ut est, prima inani cu cum. Eum ea saepe audiam animal. Duis meliore vel no. Sed mentitum ocurreret in. Iusto salutatus ea eum.</p>

<p>Minim dolore numquam vix an, soleat honestatis cotidieque eum cu. Sea ne ancillae voluptatum. At vim cibo veri, vim audire explicari maluisset id. Suscipit cotidieque pro id, alia tollit mandamus ad vix. Et meis tollit petentium mel, eu dico semper mel. Eius probo aeque ne per, id mollis erroribus efficiantur duo, dolor adversarium ne duo. Ius ex illud regione definitionem.</p>
 ]]></content>
</entry>


  <entry>
  <title type="text">Now seriously something real</title>
  <link rel="alternate" type="text/html" href="http://username.github.io//post5.html" />
  <id>http://username.github.io//post5</id>
  <published>2013-02-10T00:00:00Z</published>
  <updated>2013-02-10T00:00:00Z</updated>
  <content type="html"><![CDATA[ <p>As I engage in the so-called &ldquo;bull sessions&rdquo; around and about the school, I too often find that most college men have a misconception of the purpose of education. Most of the &ldquo;brethren&rdquo; think that education should equip them with the proper instruments of exploitation so that they can forever trample over the masses. Still others think that education should furnish them with noble ends rather than means to an end.</p>

<p>It seems to me that education has a two-fold function to perform in the life of man and in society: the one is utility and the other is culture. Education must enable a man to become more efficient, to achieve with increasing facility the ligitimate goals of his life.</p>

<p>Education must also train one for quick, resolute and effective thinking. To think incisively and to think for one&rsquo;s self is very difficult. We are prone to let our mental life become invaded by legions of half truths, prejudices, and propaganda. At this point, I often wonder whether or not education is fulfilling its purpose. A great majority of the so-called educated people do not think logically and scientifically. Even the press, the classroom, the platform, and the pulpit in many instances do not give us objective and unbiased truths. To save man from the morass of propaganda, in my opinion, is one of the chief aims of education. Education must enable one to sift and weigh evidence, to discern the true from the false, the real from the unreal, and the facts from the fiction.</p>

<p>The function of education, therefore, is to teach one to think intensively and to think critically. But education which stops with efficiency may prove the greatest menace to society. The most dangerous criminal may be the man gifted with reason, but with no morals.</p>

<p>The late Eugene Talmadge, in my opinion, possessed one of the better minds of Georgia, or even America. Moreover, he wore the Phi Beta Kappa key. By all measuring rods, Mr. Talmadge could think critically and intensively; yet he contends that I am an inferior being. Are those the types of men we call educated?</p>

<p>We must remember that intelligence is not enough. Intelligence plus character&ndash;that is the goal of true education. The complete education gives one not only power of concentration, but worthy objectives upon which to concentrate. The broad education will, therefore, transmit to one not only the accumulated knowledge of the race but also the accumulated experience of social living.</p>

<p>If we are not careful, our colleges will produce a group of close-minded, unscientific, illogical propagandists, consumed with immoral acts. Be careful, &ldquo;brethren!&rdquo; Be careful, teachers!</p>

<p>By Martin Luther King</p>

<p>An American pastor, activist, humanitarian. People know him for leading the African-American Civil Rights movement using nonviolent civil disobedience.</p>
 ]]></content>
</entry>


  <entry>
  <title type="text">I have a dream &lt;3</title>
  <link rel="alternate" type="text/html" href="http://username.github.io//post6.html" />
  <id>http://username.github.io//post6</id>
  <published>2013-01-24T00:00:00Z</published>
  <updated>2013-01-24T00:00:00Z</updated>
  <content type="html"><![CDATA[ <p>I am happy to join with you today in what will go down in history as the greatest demonstration for freedom in the history of our nation.</p>

<p>Five score years ago, a great American, in whose symbolic shadow we stand today, signed the Emancipation Proclamation. This momentous decree came as a great beacon light of hope to millions of Negro slaves who had been seared in the flames of withering injustice. It came as a joyous daybreak to end the long night of their captivity.</p>

<p>But one hundred years later, the Negro still is not free. One hundred years later, the life of the Negro is still sadly crippled by the manacles of segregation and the chains of discrimination. One hundred years later, the Negro lives on a lonely island of poverty in the midst of a vast ocean of material prosperity. One hundred years later, the Negro is still languished in the corners of American society and finds himself an exile in his own land. And so we&rsquo;ve come here today to dramatize a shameful condition.</p>

<p>In a sense we&rsquo;ve come to our nation&rsquo;s capital to cash a check. When the architects of our republic wrote the magnificent words of the Constitution and the Declaration of Independence, they were signing a promissory note to which every American was to fall heir. This note was a promise that all men, yes, black men as well as white men, would be guaranteed the &ldquo;unalienable Rights&rdquo; of &ldquo;Life, Liberty and the pursuit of Happiness.&rdquo; It is obvious today that America has defaulted on this promissory note, insofar as her citizens of color are concerned. Instead of honoring this sacred obligation, America has given the Negro people a bad check, a check which has come back marked &ldquo;insufficient funds.&rdquo;</p>

<p>But we refuse to believe that the bank of justice is bankrupt. We refuse to believe that there are insufficient funds in the great vaults of opportunity of this nation. And so, we&rsquo;ve come to cash this check, a check that will give us upon demand the riches of freedom and the security of justice.</p>

<p>We have also come to this hallowed spot to remind America of the fierce urgency of Now. This is no time to engage in the luxury of cooling off or to take the tranquilizing drug of gradualism. Now is the time to make real the promises of democracy. Now is the time to rise from the dark and desolate valley of segregation to the sunlit path of racial justice. Now is the time to lift our nation from the quicksands of racial injustice to the solid rock of brotherhood. Now is the time to make justice a reality for all of God&rsquo;s children.</p>

<p>It would be fatal for the nation to overlook the urgency of the moment. This sweltering summer of the Negro&rsquo;s legitimate discontent will not pass until there is an invigorating autumn of freedom and equality. Nineteen sixty-three is not an end, but a beginning. And those who hope that the Negro needed to blow off steam and will now be content will have a rude awakening if the nation returns to business as usual. And there will be neither rest nor tranquility in America until the Negro is granted his citizenship rights. The whirlwinds of revolt will continue to shake the foundations of our nation until the bright day of justice emerges.</p>

<p>But there is something that I must say to my people, who stand on the warm threshold which leads into the palace of justice: In the process of gaining our rightful place, we must not be guilty of wrongful deeds. Let us not seek to satisfy our thirst for freedom by drinking from the cup of bitterness and hatred. We must forever conduct our struggle on the high plane of dignity and discipline. We must not allow our creative protest to degenerate into physical violence. Again and again, we must rise to the majestic heights of meeting physical force with soul force.</p>

<p>The marvelous new militancy which has engulfed the Negro community must not lead us to a distrust of all white people, for many of our white brothers, as evidenced by their presence here today, have come to realize that their destiny is tied up with our destiny. And they have come to realize that their freedom is inextricably bound to our freedom.</p>

<p>We cannot walk alone.</p>

<p>And as we walk, we must make the pledge that we shall always march ahead.</p>

<p>We cannot turn back.</p>

<p>There are those who are asking the devotees of civil rights, &ldquo;When will you be satisfied?&rdquo; We can never be satisfied as long as the Negro is the victim of the unspeakable horrors of police brutality. We can never be satisfied as long as our bodies, heavy with the fatigue of travel, cannot gain lodging in the motels of the highways and the hotels of the cities. We cannot be satisfied as long as the negro&rsquo;s basic mobility is from a smaller ghetto to a larger one. We can never be satisfied as long as our children are stripped of their self-hood and robbed of their dignity by signs stating: &ldquo;For Whites Only.&rdquo; We cannot be satisfied as long as a Negro in Mississippi cannot vote and a Negro in New York believes he has nothing for which to vote. No, no, we are not satisfied, and we will not be satisfied until &ldquo;justice rolls down like waters, and righteousness like a mighty stream.&rdquo;</p>

<p>I am not unmindful that some of you have come here out of great trials and tribulations. Some of you have come fresh from narrow jail cells. And some of you have come from areas where your quest &ndash; quest for freedom left you battered by the storms of persecution and staggered by the winds of police brutality. You have been the veterans of creative suffering. Continue to work with the faith that unearned suffering is redemptive. Go back to Mississippi, go back to Alabama, go back to South Carolina, go back to Georgia, go back to Louisiana, go back to the slums and ghettos of our northern cities, knowing that somehow this situation can and will be changed.</p>

<p>Let us not wallow in the valley of despair, I say to you today, my friends.</p>

<p>And so even though we face the difficulties of today and tomorrow, I still have a dream. It is a dream deeply rooted in the American dream.</p>

<p>I have a dream that one day this nation will rise up and live out the true meaning of its creed: &ldquo;We hold these truths to be self-evident, that all men are created equal.&rdquo;</p>

<p>I have a dream that one day on the red hills of Georgia, the sons of former slaves and the sons of former slave owners will be able to sit down together at the table of brotherhood.</p>

<p>I have a dream that one day even the state of Mississippi, a state sweltering with the heat of injustice, sweltering with the heat of oppression, will be transformed into an oasis of freedom and justice.</p>

<p>I have a dream that my four little children will one day live in a nation where they will not be judged by the color of their skin but by the content of their character.</p>

<p>I have a <strong>dream</strong> today!</p>

<p>I have a dream that one day, down in Alabama, with its vicious racists, with its governor having his lips dripping with the words of &ldquo;interposition&rdquo; and &ldquo;nullification&rdquo; &ndash; one day right there in Alabama little black boys and black girls will be able to join hands with little white boys and white girls as sisters and brothers.</p>

<p>I have a <strong>dream</strong> today!</p>

<p>I have a dream that one day every valley shall be exalted, and every hill and mountain shall be made low, the rough places will be made plain, and the crooked places will be made straight; &ldquo;and the glory of the Lord shall be revealed and all flesh shall see it together.&rdquo;</p>

<p>This is our hope, and this is the faith that I go back to the South with.</p>

<p>With this faith, we will be able to hew out of the mountain of despair a stone of hope. With this faith, we will be able to transform the jangling discords of our nation into a beautiful symphony of brotherhood. With this faith, we will be able to work together, to pray together, to struggle together, to go to jail together, to stand up for freedom together, knowing that we will be free one day.</p>

<p>And this will be the day &ndash; this will be the day when all of God&rsquo;s children will be able to sing with new meaning:</p>

<blockquote><p> My country &lsquo;tis of thee, sweet land of liberty, of thee I sing.</p>

<p> Land where my fathers died, land of the Pilgrim&rsquo;s pride,</p>

<p> From every mountainside, let freedom ring!</p></blockquote>

<p>And if America is to be a great nation, this must become true.</p>

<p>And so let freedom ring from the prodigious hilltops of New Hampshire.</p>

<blockquote><p> Let freedom ring from the mighty mountains of New York.</p>

<p> Let freedom ring from the heightening Alleghenies of Pennsylvania.</p>

<p> Let freedom ring from the snow-capped Rockies of Colorado.</p>

<p> Let freedom ring from the curvaceous slopes of California.</p></blockquote>

<p>But not only that:</p>

<blockquote><p> Let freedom ring from Stone Mountain of Georgia.</p>

<p> Let freedom ring from Lookout Mountain of Tennessee.</p>

<p> Let freedom ring from every hill and molehill of Mississippi.</p>

<p> From every mountainside, let freedom ring.</p></blockquote>

<p>And when this happens, and when we allow freedom ring, when we let it ring from every village and every hamlet, from every state and every city, we will be able to speed up that day when all of God&rsquo;s children, black men and white men, Jews and Gentiles, Protestants and Catholics, will be able to join hands and sing in the words of the old Negro spiritual:</p>

<p><em>Free at last! Free at last!</em></p>

<p><em>Thank God Almighty, we are free at last!</em></p>

<p>By <strong>Martin Luther King</strong></p>

<p>An American pastor, activist, humanitarian. People know him for leading the African-American Civil Rights movement using nonviolent civil disobedience.</p>
 ]]></content>
</entry>


  <entry>
  <title type="text">Nice sticky footer down there &amp;darr; &amp;darr;</title>
  <link rel="alternate" type="text/html" href="http://username.github.io//post7.html" />
  <id>http://username.github.io//post7</id>
  <published>2012-11-04T00:00:00Z</published>
  <updated>2012-11-04T00:00:00Z</updated>
  <content type="html"><![CDATA[ <p>Lorem ipsum dolor sit amet, te semper nostrud eos, ei feugiat dignissim nam, graeco aliquid vix ad. Ut nec erant pericula, ei mollis nominati qui. Vim an case vidit sententiae, est at euismod laboramus efficiantur. Ei sit brute lorem, ea eam timeam viderer aliquid, cu integre omittam moderatius quo.</p>

<p>Per cu prompta minimum. No sit stet aliquam, et duo tale possit minimum. Cu dicta mundi consequat sed. Ut duo sint probatus deserunt. Iriure copiosae te sed. Duo ea unum lorem tempor, per ex novum dicit concludaturque, ei ullum sanctus luptatum eum.</p>
 ]]></content>
</entry>


  <entry>
  <title type="text">Jekyll Introduction</title>
  <link rel="alternate" type="text/html" href="http://username.github.io//jekyll-introduction.html" />
  <id>http://username.github.io//jekyll-introduction</id>
  <published>2011-12-29T00:00:00Z</published>
  <updated>2011-12-29T00:00:00Z</updated>
  <content type="html"><![CDATA[ <p>This Jekyll introduction will outline specifically  what Jekyll is and why you would want to use it.
Directly following the intro we&rsquo;ll learn exactly <em>how</em> Jekyll does what it does.</p>

<h2>Overview</h2>

<h3>What is Jekyll?</h3>

<p>Jekyll is a parsing engine bundled as a ruby gem used to build static websites from
dynamic components such as templates, partials, liquid code, markdown, etc. Jekyll is known as &ldquo;a simple, blog aware, static site generator&rdquo;.</p>

<h3>Examples</h3>

<p>This website is created with Jekyll. <a href="https://github.com/mojombo/jekyll/wiki/Sites">Other Jekyll websites</a>.</p>

<h3>What does Jekyll Do?</h3>

<p>Jekyll is a ruby gem you install on your local system.
Once there you can call <code>jekyll --server</code> on a directory and provided that directory
is setup in a way jekyll expects, it will do magic stuff like parse markdown/textile files,
compute categories, tags, permalinks, and construct your pages from layout templates and partials.</p>

<p>Once parsed, Jekyll stores the result in a self-contained static <code>_site</code> folder.
The intention here is that you can serve all contents in this folder statically from a plain static web-server.</p>

<p>You can think of Jekyll as a normalish dynamic blog but rather than parsing content, templates, and tags
on each request, Jekyll does this once <em>beforehand</em> and caches the <em>entire website</em> in a folder for serving statically.</p>

<h3>Jekyll is Not Blogging Software</h3>

<p><strong>Jekyll is a parsing engine.</strong></p>

<p>Jekyll does not come with any content nor does it have any templates or design elements.
This is a common source of confusion when getting started.
Jekyll does not come with anything you actually use or see on your website - you have to make it.</p>

<h3>Why Should I Care?</h3>

<p>Jekyll is very minimalistic and very efficient.
The most important thing to realize about Jekyll is that it creates a static representation of your website requiring only a static web-server.
Traditional dynamic blogs like Wordpress require a database and server-side code.
Heavily trafficked dynamic blogs must employ a caching layer that ultimately performs the same job Jekyll sets out to do; serve static content.</p>

<p>Therefore if you like to keep things simple and you prefer the command-line over an admin panel UI then give Jekyll a try.</p>

<p><strong>Developers like Jekyll because we can write content like we write code:</strong></p>

<ul>
<li>Ability to write content in markdown or textile in your favorite text-editor.</li>
<li>Ability to write and preview your content via localhost.</li>
<li>No internet connection required.</li>
<li>Ability to publish via git.</li>
<li>Ability to host your blog on a static web-server.</li>
<li>Ability to host freely on GitHub Pages.</li>
<li>No database required.</li>
</ul>


<h1>How Jekyll Works</h1>

<p>The following is a complete but concise outline of exactly how Jekyll works.</p>

<p>Be aware that core concepts are introduced in rapid succession without code examples.
This information is not intended to specifically teach you how to do anything, rather it
is intended to give you the <em>full picture</em> relative to what is going on in Jekyll-world.</p>

<p>Learning these core concepts should help you avoid common frustrations and ultimately
help you better understand the code examples contained throughout Jekyll-Bootstrap.</p>

<h2>Initial Setup</h2>

<p>After <a href="/index.html#start-now">installing jekyll</a> you&rsquo;ll need to format your website directory in a way jekyll expects.
Jekyll-bootstrap conveniently provides the base directory format.</p>

<h3>The Jekyll Application Base Format</h3>

<p>Jekyll expects your website directory to be laid out like so:</p>

<pre><code>.
|-- _config.yml
|-- _includes
|-- _layouts
|   |-- default.html
|   |-- post.html
|-- _posts
|   |-- 2011-10-25-open-source-is-good.markdown
|   |-- 2011-04-26-hello-world.markdown
|-- _site
|-- index.html
|-- assets
    |-- css
        |-- style.css
    |-- javascripts
</code></pre>

<ul>
<li><p><strong>_config.yml</strong>
  Stores configuration data.</p></li>
<li><p><strong>_includes</strong>
  This folder is for partial views.</p></li>
<li><p><strong>_layouts</strong>
  This folder is for the main templates your content will be inserted into.
  You can have different layouts for different pages or page sections.</p></li>
<li><p><strong>_posts</strong>
  This folder contains your dynamic content/posts.
  the naming format is required to be <code>@YEAR-MONTH-DATE-title.MARKUP@</code>.</p></li>
<li><p><strong>_site</strong>
  This is where the generated site will be placed once Jekyll is done transforming it.</p></li>
<li><p><strong>assets</strong>
  This folder is not part of the standard jekyll structure.
  The assets folder represents <em>any generic</em> folder you happen to create in your root directory.
  Directories and files not properly formatted for jekyll will be left untouched for you to serve normally.</p></li>
</ul>


<p>(read more: <a href="https://github.com/mojombo/jekyll/wiki/Usage">https://github.com/mojombo/jekyll/wiki/Usage</a>)</p>

<h3>Jekyll Configuration</h3>

<p>Jekyll supports various configuration options that are fully outlined here:
(<a href="https://github.com/mojombo/jekyll/wiki/Configuration">https://github.com/mojombo/jekyll/wiki/Configuration</a>)</p>

<h2>Content in Jekyll</h2>

<p>Content in Jekyll is either a post or a page.
These content &ldquo;objects&rdquo; get inserted into one or more templates to build the final output for its respective static-page.</p>

<h3>Posts and Pages</h3>

<p>Both posts and pages should be written in markdown, textile, or HTML and may also contain Liquid templating syntax.
Both posts and pages can have meta-data assigned on a per-page basis such as title, url path, as well as arbitrary custom meta-data.</p>

<h3>Working With Posts</h3>

<p><strong>Creating a Post</strong>
Posts are created by properly formatting a file and placing it the <code>_posts</code> folder.</p>

<p><strong>Formatting</strong>
A post must have a valid filename in the form <code>YEAR-MONTH-DATE-title.MARKUP</code> and be placed in the <code>_posts</code> directory.
If the data format is invalid Jekyll will not recognize the file as a post. The date and title are automatically parsed from the filename of the post file.
Additionally, each file must have <a href="https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter">YAML Front-Matter</a> prepended to its content.
YAML Front-Matter is a valid YAML syntax specifying meta-data for the given file.</p>

<p><strong>Order</strong>
Ordering is an important part of Jekyll but it is hard to specify a custom ordering strategy.
Only reverse chronological and chronological ordering is supported in Jekyll.</p>

<p>Since the date is hard-coded into the filename format, to change the order, you must change the dates in the filenames.</p>

<p><strong>Tags</strong>
Posts can have tags associated with them as part of their meta-data.
Tags may be placed on posts by providing them in the post&rsquo;s YAML front matter.
You have access to the post-specific tags in the templates. These tags also get added to the sitewide collection.</p>

<p><strong>Categories</strong>
Posts may be categorized by providing one or more categories in the YAML front matter.
Categories offer more significance over tags in that they can be reflected in the URL path to the given post.
Note categories in Jekyll work in a specific way.
If you define more than one category you are defining a category hierarchy &ldquo;set&rdquo;.
Example:</p>

<pre><code>---
title :  Hello World
categories : [lessons, beginner]
---
</code></pre>

<p>This defines the category hierarchy &ldquo;lessons/beginner&rdquo;. Note this is <em>one category</em> node in Jekyll.
You won&rsquo;t find &ldquo;lessons&rdquo; and &ldquo;beginner&rdquo; as two separate categories unless you define them elsewhere as singular categories.</p>

<h3>Working With Pages</h3>

<p><strong>Creating a Page</strong>
Pages are created by properly formatting a file and placing it anywhere in the root directory or subdirectories that do <em>not</em> start with an underscore.</p>

<p><strong>Formatting</strong>
In order to register as a Jekyll page the file must contain <a href="https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter">YAML Front-Matter</a>.
Registering a page means 1) that Jekyll will process the page and 2) that the page object will be available in the <code>site.pages</code> array for inclusion into your templates.</p>

<p><strong>Categories and Tags</strong>
Pages do not compute categories nor tags so defining them will have no effect.</p>

<p><strong>Sub-Directories</strong>
If pages are defined in sub-directories, the path to the page will be reflected in the url.
Example:</p>

<pre><code>.
|-- people
    |-- bob
        |-- essay.html
</code></pre>

<p>This page will be available at <code>http://yourdomain.com/people/bob/essay.html</code></p>

<p><strong>Recommended Pages</strong></p>

<ul>
<li><strong>index.html</strong>
You will always want to define the root index.html page as this will display on your root URL.</li>
<li><strong>404.html</strong>
Create a root 404.html page and GitHub Pages will serve it as your 404 response.</li>
<li><strong>sitemap.html</strong>
Generating a sitemap is good practice for SEO.</li>
<li><strong>about.html</strong>
A nice about page is easy to do and gives the human perspective to your website.</li>
</ul>


<h2>Templates in Jekyll</h2>

<p>Templates are used to contain a page&rsquo;s or post&rsquo;s content.
All templates have access to a global site object variable: <code>site</code> as well as a page object variable: <code>page</code>.
The site variable holds all accessible content and metadata relative to the site.
The page variable holds accessible data for the given page or post being rendered at that point.</p>

<p><strong>Create a Template</strong>
Templates are created by properly formatting a file and placing it in the <code>_layouts</code> directory.</p>

<p><strong>Formatting</strong>
Templates should be coded in HTML and contain YAML Front Matter.
All templates can contain Liquid code to work with your site&rsquo;s data.</p>

<p><strong>Rending Page/Post Content in a Template</strong>
There is a special variable in all templates named : <code>content</code>.
The <code>content</code> variable holds the page/post content including any sub-template content previously defined.
Render the content variable wherever you want your main content to be injected into your template:</p>

<p>  <pre><code>&hellip;
&lt;body&gt;
  &lt;div id=&ldquo;sidebar&rdquo;&gt; &hellip; &lt;/div&gt;
  &lt;div id=&ldquo;main&rdquo;&gt;
    &#123;{content}&#125;
  &lt;/div&gt;
&lt;/body&gt;
&hellip;</code></pre></p>

<h3>Sub-Templates</h3>

<p>Sub-templates are exactly templates with the only difference being they
define another &ldquo;root&rdquo; layout/template within their YAML Front Matter.
This essentially means a template will render inside of another template.</p>

<h3>Includes</h3>

<p>In Jekyll you can define include files by placing them in the <code>_includes</code> folder.
Includes are NOT templates, rather they are just code snippets that get included into templates.
In this way, you can treat the code inside includes as if it was native to the parent template.</p>

<p>Any valid template code may be used in includes.</p>

<h2>Using Liquid for Templating</h2>

<p>Templating is perhaps the most confusing and frustrating part of Jekyll.
This is mainly due to the fact that Jekyll templates must use the Liquid Templating Language.</p>

<h3>What is Liquid?</h3>

<p><a href="https://github.com/Shopify/liquid">Liquid</a> is a secure templating language developed by <a href="http://shopify.com">Shopify</a>.
Liquid is designed for end-users to be able to execute logic within template files
without imposing any security risk on the hosting server.</p>

<p>Jekyll uses Liquid to generate the post content within the final page layout structure and as the primary interface for working with
your site and post/page data.</p>

<h3>Why Do We Have to Use Liquid?</h3>

<p>GitHub uses Jekyll to power <a href="http://pages.github.com/">GitHub Pages</a>.
GitHub cannot afford to run arbitrary code on their servers so they lock developers down via Liquid.</p>

<h3>Liquid is Not Programmer-Friendly.</h3>

<p>The short story is liquid is not real code and its not intended to execute real code.
The point being you can&rsquo;t do jackshit in liquid that hasn&rsquo;t been allowed explicitly by the implementation.
What&rsquo;s more you can only access data-structures that have been explicitly passed to the template.</p>

<p>In Jekyll&rsquo;s case it is not possible to alter what is passed to Liquid without hacking the gem or running custom plugins.
Both of which cannot be supported by GitHub Pages.</p>

<p>As a programmer - this is very frustrating.</p>

<p>But rather than look a gift horse in the mouth we are going to
suck it up and view it as an opportunity to work around limitations and adopt client-side solutions when possible.</p>

<p><strong>Aside</strong>
My personal stance is to not invest time trying to hack liquid. It&rsquo;s really unnecessary
<em>from a programmer&rsquo;s</em> perspective. That is to say if you have the ability to run custom plugins (i.e. run arbitrary ruby code)
you are better off sticking with ruby. Toward that end I&rsquo;ve built <a href="http://github.com/plusjade/mustache-with-jekyll">Mustache-with-Jekyll</a></p>

<h2>Static Assets</h2>

<p>Static assets are any file in the root or non-underscored subfolders that are not pages.
That is they have no valid YAML Front Matter and are thus not treated as Jekyll Pages.</p>

<p>Static assets should be used for images, css, and javascript files.</p>

<h2>How Jekyll Parses Files</h2>

<p>Remember Jekyll is a processing engine. There are two main types of parsing in Jekyll.</p>

<ul>
<li><strong>Content parsing.</strong>
  This is done with textile or markdown.</li>
<li><strong>Template parsing.</strong>
This is done with the liquid templating language.</li>
</ul>


<p>And thus there are two main types of file formats needed for this parsing.</p>

<ul>
<li><strong>Post and Page files.</strong>
All content in Jekyll is either a post or a page so valid posts and pages are parsed with markdown or textile.</li>
<li><strong>Template files.</strong>
  These files go in <code>_layouts</code> folder and contain your blogs <strong>templates</strong>. They should be made in HTML with the help of Liquid syntax.
  Since include files are simply injected into templates they are essentially parsed as if they were native to the template.</li>
</ul>


<p><strong>Arbitrary files and folders.</strong>
Files that <em>are not</em> valid pages are treated as static content and pass through
Jekyll untouched and reside on your blog in the exact structure and format they originally existed in.</p>

<h3>Formatting Files for Parsing.</h3>

<p>We&rsquo;ve outlined the need for valid formatting using <strong>YAML Front Matter</strong>.
Templates, posts, and pages all need to provide valid YAML Front Matter even if the Matter is empty.
This is the only way Jekyll knows you want the file processed.</p>

<p>YAML Front Matter must be prepended to the top of template/post/page files:</p>

<pre><code>---
layout: post
category : pages
tags : [how-to, jekyll]
---

... contents ...
</code></pre>

<p>Three hyphens on a new line start the Front-Matter block and three hyphens on a new line end the block.
The data inside the block must be valid YAML.</p>

<p>Configuration parameters for YAML Front-Matter is outlined here:
<a href="https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter">A comprehensive explanation of YAML Front Matter</a></p>

<h4>Defining Layouts for Posts and Templates Parsing.</h4>

<p>The <code>layout</code> parameter in the YAML Front Matter defines the template file for which the given post or template should be injected into.
If a template file specifies its own layout, it is effectively being used as a <code>sub-template.</code>
That is to say loading a post file into a template file that refers to another template file with work in the way you&rsquo;d expect; as a nested sub-template.</p>

<h2>How Jekyll Generates the Final Static Files.</h2>

<p>Ultimately, Jekyll&rsquo;s job is to generate a static representation of your website.
The following is an outline of how that&rsquo;s done:</p>

<ol>
<li><p><strong>Jekyll collects data.</strong>
Jekyll scans the posts directory and collects all posts files as post objects. It then scans the layout assets and collects those and finally scans other directories in search of pages.</p></li>
<li><p><strong>Jekyll computes data.</strong>
Jekyll takes these objects, computes metadata (permalinks, tags, categories, titles, dates) from them and constructs one
big <code>site</code> object that holds all the posts, pages, layouts, and respective metadata.
At this stage your site is one big computed ruby object.</p></li>
<li><p><strong>Jekyll liquifies posts and templates.</strong>
Next jekyll loops through each post file and converts (through markdown or textile) and <strong>liquifies</strong> the post inside of its respective layout(s).
Once the post is parsed and liquified inside the the proper layout structure, the layout itself is &ldquo;liquified&rdquo;.
 <strong>Liquification</strong> is defined as follows: Jekyll initiates a Liquid template, and passes a simpler hash representation of the ruby site object as well as a simpler
hash representation of the ruby post object. These simplified data structures are what you have access to in the templates.</p></li>
<li><p><strong>Jekyll generates output.</strong>
 Finally the liquid templates are &ldquo;rendered&rdquo;, thereby processing any liquid syntax provided in the templates
 and saving the final, static representation of the file.</p></li>
</ol>


<p><strong>Notes.</strong>
Because Jekyll computes the entire site in one fell swoop, each template is given access to
a global <code>site</code> hash that contains useful data. It is this data that you&rsquo;ll iterate through and format
using the Liquid tags and filters in order to render it onto a given page.</p>

<p>Remember, in Jekyll you are an end-user. Your API has only two components:</p>

<ol>
<li>The manner in which you setup your directory.</li>
<li>The liquid syntax and variables passed into the liquid templates.</li>
</ol>


<p>All the data objects available to you in the templates via Liquid are outlined in the <strong>API Section</strong> of Jekyll-Bootstrap.
You can also read the original documentation here: <a href="https://github.com/mojombo/jekyll/wiki/Template-Data">https://github.com/mojombo/jekyll/wiki/Template-Data</a></p>

<h2>Conclusion</h2>

<p>I hope this paints a clearer picture of what Jekyll is doing and why it works the way it does.
As noted, our main programming constraint is the fact that our API is limited to what is accessible via Liquid and Liquid only.</p>

<p>Jekyll-bootstrap is intended to provide helper methods and strategies aimed at making it more intuitive and easier to work with Jekyll =)</p>

<p><strong>Thank you</strong> for reading this far.</p>

<h2>Next Steps</h2>

<p>Please take a look at <a href=""></a>
or jump right into <a href="">Usage</a> if you&rsquo;d like.</p>
 ]]></content>
</entry>



</feed>
